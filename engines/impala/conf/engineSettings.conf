#!/usr/bin/env bash

#"INTEL CONFIDENTIAL"
#Copyright 2015  Intel Corporation All Rights Reserved. 
#
#The source code contained or described herein and all documents related to the source code ("Material") are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel Corporation or its suppliers and licensors. The Material contains trade secrets and proprietary and confidential information of Intel or its suppliers and licensors. The Material is protected by worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in any way without Intel's prior express written permission.
#
#No license under any patent, copyright, trade secret or other intellectual property right is granted to or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, inducement, estoppel or otherwise. Any license under such intellectual property rights must be express and approved by Intel in writing.

HIVE_ENGINE_DIR="$BIG_BENCH_HOME/engines/hive"
HIVE_ENGINE_CONF_FILE="$HIVE_ENGINE_DIR/conf/engineSettings.conf"

export BIG_BENCH_ENGINE_DIR="$HIVE_ENGINE_DIR"
export BIG_BENCH_ENGINE_CONF_DIR="$HIVE_ENGINE_DIR/conf"

if [ -f "$HIVE_ENGINE_CONF_FILE" ]
then
  source "$HIVE_ENGINE_CONF_FILE"
else
  echo "hive engine settings file missing"
  exit 1
fi

IMPALA_ENGINE_DIR="$BIG_BENCH_HOME/engines/impala"
IMPALA_QUERIES_DIR="$IMPALA_ENGINE_DIR/queries"

BIG_BENCH_ENGINE_SETTINGS_FILE="$IMPALA_ENGINE_DIR/conf/engineSettings.sql"
HIVE_BINARY="$BINARY"

runEngineCmd () {
  if generateImpalaFiles $@
  then
    if [ `echo $MODULE | grep -P "cleanAll"` ]
    then
      echo "WARNING: Impala cannot execute $@"
      echo "WARNING: Using $HIVE_BINARY for this query"
      "$HIVE_BINARY" "${HIVE_BINARY_PARAMS[@]}"
      #we need to invalidate metadata to avoid Impalad errors
      "$BINARY" ${BINARY_PARAMS[@]} "-q invalidate metadata"
      return $?
    else
      "$BINARY" "${IMPALA_BINARY_PARAMS[@]}"
      return $?
    fi
  else
    return 1
  fi
}

# only do sanity check as Impala does not support init params
addInitScriptsToParams () {
  if [ -n "$USER_QUERY_PARAMS_FILE" ]
  then
    if [ ! -r "$USER_QUERY_PARAMS_FILE" ]
    then
      echo "User query parameter file $USER_QUERY_PARAMS_FILE can not be read."
      return 1
    fi
  fi

  if [ -n "$USER_ENGINE_SETTINGS_FILE" ]
  then
    if [ ! -r "$USER_ENGINE_SETTINGS_FILE" ]
    then
      echo "User impala settings file $USER_ENGINE_SETTINGS_FILE can not be read."
      return 1
    fi
  fi
  return 0
}

generateImpalaFiles () {
  #reset LOCAL_QUERY_ENGINE_SETTINGS_FILE
  LOCAL_QUERY_ENGINE_SETTINGS_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/impalaLocalSettings.sql"
  #reset LOCAL_QUERY_ENGINE_SETTINGS_CONF_FILE
  LOCAL_QUERY_ENGINE_SETTINGS_CONF_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/impalaLocalSettings.conf"

  shift
  QUERY_SOURCE=$@
  #determine the correct query source file (HIVE_QUERY_FILE)
  if [[ -f $QUERY_SOURCE && -r $QUERY_SOURCE ]]
  then
    #found a same named query file under impala folder, use it anyway
    if [ -r ${QUERY_SOURCE/engines\/hive/engines\/impala} ]
    then
      HIVE_QUERY_FILE=${QUERY_SOURCE/engines\/hive/engines\/impala}
    else
      HIVE_QUERY_FILE=$QUERY_SOURCE
    fi
  fi

  #should distinguish with STREAM_NUMBER when running queries in throughput phase
  if [ -n "$QUERY_NUMBER" ]
  then
    mkdir -p $IMPALA_QUERIES_DIR/$QUERY_NAME 2>/dev/null
    SED_SCRIPT_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/.impala_sedfile_${BIG_BENCH_STREAM_NUMBER}"
    IMPALA_QUERY_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/.impala_${QUERY_NAME}_${BIG_BENCH_STREAM_NUMBER}.sql"
    IMPALA_QUERY_PARAMS_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/.impala_${QUERY_NAME}_queryParams_${BIG_BENCH_STREAM_NUMBER}.sql"
    IMPALA_CONF_FILE="$IMPALA_QUERIES_DIR/$QUERY_NAME/.impala_config_${BIG_BENCH_STREAM_NUMBER}"
  else
    mkdir -p $IMPALA_ENGINE_DIR 2>/dev/null
    SED_SCRIPT_FILE="$IMPALA_ENGINE_DIR/.impala_sedfile"
    IMPALA_QUERY_FILE="$IMPALA_ENGINE_DIR/.impala_`basename $HIVE_QUERY_FILE 2>/dev/null`"
    IMPALA_QUERY_PARAMS_FILE="$IMPALA_ENGINE_DIR/.impala_queryParams_`basename $HIVE_QUERY_FILE 2>/dev/null`"
    IMPALA_CONF_FILE="$IMPALA_ENGINE_DIR/.impala_config"
  fi

  #clear old content of IMPALA_QUERY_FILE
  echo > $IMPALA_QUERY_FILE
  echo > $IMPALA_QUERY_PARAMS_FILE
  #copy customized settings for Impala queries
  if [[ -n "$BIG_BENCH_ENGINE_SETTINGS_FILE" && -r "$BIG_BENCH_ENGINE_SETTINGS_FILE" ]]
  then
    echo "-- copied from $BIG_BENCH_ENGINE_SETTINGS_FILE --" >> $IMPALA_QUERY_FILE
    cat $BIG_BENCH_ENGINE_SETTINGS_FILE >> $IMPALA_QUERY_FILE
    echo "-- end of $BIG_BENCH_ENGINE_SETTINGS_FILE --" >> $IMPALA_QUERY_FILE
  fi
  if [[ -n "$LOCAL_QUERY_ENGINE_SETTINGS_FILE" && -r "$LOCAL_QUERY_ENGINE_SETTINGS_FILE" ]]
  then
    echo "-- copied from $LOCAL_QUERY_ENGINE_SETTINGS_FILE --" >> $IMPALA_QUERY_FILE
    cat $LOCAL_QUERY_ENGINE_SETTINGS_FILE >> $IMPALA_QUERY_FILE
    echo "-- end of $LOCAL_QUERY_ENGINE_SETTINGS_FILE --" >> $IMPALA_QUERY_FILE
  fi

  if [ ! -z $HIVE_QUERY_FILE ]
  then
    #copy all 'set' commands to queryParams file
    sed -e 's/^SET/set/;/^set/ p;d' $HIVE_QUERY_FILE >> $IMPALA_QUERY_PARAMS_FILE

    #copy the query file and remove 'set' commands
    sed -e 's/^SET/set/;/^set/ d' $HIVE_QUERY_FILE >> $IMPALA_QUERY_FILE
  else
    #copy the query specified via command line
    echo $QUERY_SOURCE >> $IMPALA_QUERY_FILE
  fi 

  #create Impala config file and point to the actual query_file
  cat > $IMPALA_CONF_FILE <<EOF
[impala]
query_file=$IMPALA_QUERY_FILE
EOF

  #copy customized settings for impala engine
  if [[ -n "$LOCAL_QUERY_ENGINE_SETTINGS_CONF_FILE" && -r "$LOCAL_QUERY_ENGINE_SETTINGS_CONF_FILE" ]]
  then
    cat $LOCAL_QUERY_ENGINE_SETTINGS_CONF_FILE >> $IMPALA_CONF_FILE
  fi
  if [[ -n "$USER_ENGINE_SETTINGS_FILE" && -r "$USER_ENGINE_SETTINGS_FILE" ]]
  then
    cat $USER_ENGINE_SETTINGS_FILE >> $IMPALA_CONF_FILE
  fi
 
  #add internal and user provided query parameters
  if [ -n "$QUERY_NUMBER" ]
  then
    if [[ -n "$BIG_BENCH_QUERY_PARAMS_FILE" && -r "$BIG_BENCH_QUERY_PARAMS_FILE" ]]
    then
      cat $BIG_BENCH_QUERY_PARAMS_FILE >> $IMPALA_QUERY_PARAMS_FILE
    fi
    if [[ -n "$USER_QUERY_PARAMS_FILE" && -r "$USER_QUERY_PARAMS_FILE" ]]
    then
      cat $USER_QUERY_PARAMS_FILE >> $IMPALA_QUERY_PARAMS_FILE
    fi 
  fi

  #enforce lower case 'set'
  sed -i -e 's/^SET/set/' $IMPALA_QUERY_PARAMS_FILE
  #replace all ${env:param} with actual environmental values for the queryParams file
  grep -oP '\${env:.*?}' $IMPALA_QUERY_PARAMS_FILE | perl -np -e 's/^\${env:(.*)}/s#\${env:$1}#$ENV{$1}#g;/g' > $SED_SCRIPT_FILE
  sed -i -f $SED_SCRIPT_FILE $IMPALA_QUERY_PARAMS_FILE

  #find all ${env:param} in the actual query file
  grep -oP '\${env:.*?}' $IMPALA_QUERY_FILE | perl -np -e 's/^\${env:(.*)}/s#\${env:$1}#$ENV{$1}#g;/g' > $SED_SCRIPT_FILE
  #copy all hive query params to the sed script file
  grep '^set' $IMPALA_QUERY_PARAMS_FILE | awk -F'set ' '{print $2}'|sed 's/^/s#${hiveconf:/g;s/=/}#/g;s/;/#g;/g' >> $SED_SCRIPT_FILE

  #copy all command line defined query params to the sed script file
  PLAIN_PARAMS=${BINARY_PARAMS[@]}
  n=`echo $PLAIN_PARAMS|awk -F '--hiveconf ' '{print NF}'`
  for i in `seq 2 $n`
  do
    PN=`echo $PLAIN_PARAMS|awk -F '--hiveconf ' '{print $'$i'}'|awk -F '=' '{print $1}'`
    PV=`echo $PLAIN_PARAMS|awk -F '--hiveconf ' '{print $'$i'}'|awk -F '=' '{print $2}'`
    echo 's#${hiveconf:'$PN'}#'$PV'#g;' >> $SED_SCRIPT_FILE
  done

  #create IMPALA_BINARY_PARAMS for caller
  NON_HIVECONF_PARAMS=${PLAIN_PARAMS%%--hiveconf*}
  IMPALA_BINARY_PARAMS=($NON_HIVECONF_PARAMS --config_file $IMPALA_CONF_FILE)
  #fallback command for Hive
  HIVE_BINARY_PARAMS=(-f $IMPALA_QUERY_FILE)

  #remove all invalid pattern match in the sed script file
  sed -i -e '/s#.*#.*#/ p;d' $SED_SCRIPT_FILE

  #now just apply pattern match for the actual query file on the fly
  sed -i -f $SED_SCRIPT_FILE $IMPALA_QUERY_FILE

  return $?
}

#Impala does not support ORC
export BIG_BENCH_hive_default_fileformat_source_table="PARQUET"

BINARY="/usr/bin/impala-shell"
#specify impalad address in BINARY_PARAMS if necessary
BINARY_PARAMS=()
